COMPILER = g++

# This might not be needed, depending on platform
MINGW_OPTIONS = -D_WIN32_WINNT=0x0501

# These options are used for development
#OPTIONS = -Wall -Wextra -W -Wshadow -Weffc++ -pedantic -Wno-long-long -g $(MINGW_OPTIONS)

# These options are intended for final use
OPTIONS = -O2 $(MINGW_OPTIONS)

PLATFORM = windows
INCLUDE_PLATFORM = -I$(PLATFORM)

OBJECT_FILES = agent.o \
	allocator.o \
	c_interface.o \
	channel.o \
	channel_group.o \
	channel_holder.o \
	fatal_errors.o \
	listener.o \
	network_utils.o \
	options.o \
	parameter_entry.o \
	parameter_iterator.o \
	parameters-details.o \
	parameters.o \
	raw_buffer_data_source.o \
	serialization.o

PLATFORM_OBJECT_FILES = $(PLATFORM)/channel.o \
	$(PLATFORM)/io_error_handler.o \
	$(PLATFORM)/listener.o \
	$(PLATFORM)/mutex.o \
	$(PLATFORM)/network_utils.o \
	$(PLATFORM)/selector.o

PUBLIC_HEADERS_DIR = ..\..\include\yami4-core

OUTPUT = libyamicore.a


all : $(OUTPUT)
	copy $(OUTPUT) ..\..\lib
	copy agent.h $(PUBLIC_HEADERS_DIR)
	copy allocator.h $(PUBLIC_HEADERS_DIR)
	copy channel_descriptor.h $(PUBLIC_HEADERS_DIR)
	copy core.h $(PUBLIC_HEADERS_DIR)
	copy dll.h $(PUBLIC_HEADERS_DIR)
	copy fatal_errors.h $(PUBLIC_HEADERS_DIR)
	copy option_names.h $(PUBLIC_HEADERS_DIR)
	copy parameter_entry.h $(PUBLIC_HEADERS_DIR)
	copy parameter_iterator.h $(PUBLIC_HEADERS_DIR)
	copy parameter_type.h $(PUBLIC_HEADERS_DIR)
	copy parameters.h $(PUBLIC_HEADERS_DIR)
	copy raw_buffer_data_source.h $(PUBLIC_HEADERS_DIR)
	copy serializable.h $(PUBLIC_HEADERS_DIR)

$(OUTPUT) : $(OBJECT_FILES) $(PLATFORM_OBJECT_FILES)
	ar rsv $@ $(OBJECT_FILES) $(PLATFORM_OBJECT_FILES)

%.o : %.cpp
	$(COMPILER) $(OPTIONS) $(INCLUDE_PLATFORM) -c -o $@ $^


clean :
	del /Q $(OUTPUT)
	del /Q *.o $(PLATFORM)\*.o
